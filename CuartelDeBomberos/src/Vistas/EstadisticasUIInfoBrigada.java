/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import AccesoADatos.BrigadaData;
import AccesoADatos.CuartelData;
import AccesoADatos.EmergenciaData;
import Entidades.Brigada;
import Entidades.Cuartel;
import Entidades.Emergencia;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;

public class EstadisticasUIInfoBrigada extends javax.swing.JInternalFrame {

    //CREO UN OBJETO DEFAULTABLEMODEL PARA DARLE UN MODELO A LA TABLA
    private final DefaultTableModel tablaModelo = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int f, int c) { //SOBREESCRIBO EL METODO PARA QUE NO SE PUEDA EDITAR
            return false;
        }
    };

    // METODO PARA CENTRAR LOS ENCABEZADOS DE LAS COLUMNAS
    private void centrarEncabezado(JTable table) {
        DefaultTableCellRenderer headerRenderer = (DefaultTableCellRenderer) table.getTableHeader().getDefaultRenderer();
        headerRenderer.setHorizontalAlignment(DefaultTableCellRenderer.CENTER);
    }

    //METODO PARA CARGAR CABECERA DE LA TABLA
    private void cargarCabecera() {
        tablaModelo.addColumn("ID"); //Creo columna
        tablaModelo.addColumn("Nombre De Brigada"); //Creo columna
        tablaModelo.addColumn("Especialidad"); //Creo columna
        tablaModelo.addColumn("Nombre De Cuartel"); //Creo columna
        jTablaDeBrigadas.setModel(tablaModelo); //CARGO LAS COLUMNAS A LA TABLA
        centrarEncabezado(jTablaDeBrigadas); //Centro los encabezados
        TableColumnModel columnModel = jTablaDeBrigadas.getColumnModel();//Determino el ancho de cada columna
        columnModel.getColumn(0).setPreferredWidth(100);
        columnModel.getColumn(1).setPreferredWidth(200);
        columnModel.getColumn(2).setPreferredWidth(600);
        columnModel.getColumn(3).setPreferredWidth(200);
    }

    //LIMPIO LAS FILAS
    private void borrarFilas() {
        int filas = jTablaDeBrigadas.getRowCount() - 1;
        for (int f = filas; f >= 0; f--) {
            tablaModelo.removeRow(f);
        }
    }

    //CARGO LA TABLA
    private void cargoDatos(Boolean estado) {
        if (estado) { //SI ES TRUE CARGO LAS BRIGADAS DISPONIBLES
            BrigadaData brigadaData = new BrigadaData();
            Emergencia emergencia = new Emergencia();
            EmergenciaData emergenciaData = new EmergenciaData();
            ArrayList<Brigada> listaBrigadas = new ArrayList();
            listaBrigadas = brigadaData.listarBrigadasSegunEstado(estado);
            Cuartel cuartel = new Cuartel();
            CuartelData cuartelData = new CuartelData();
            for (Brigada brigada : listaBrigadas) {
                cuartel = cuartelData.buscarCuartel(brigada.getNumeroCuartel());
                emergencia = emergenciaData.buscarEmergencia(brigada.getEspecialidad().getId());
                tablaModelo.addRow(new Object[]{brigada.getCodigoBrigada(), brigada.getNombreBrigada(), emergencia.getEmergencia(), cuartel.getNombreCuartel()});
            }
        } else { //SINO CARGO LAS OCUPADAS
            BrigadaData brigadaData = new BrigadaData();
            Emergencia emergencia = new Emergencia();
            EmergenciaData emergenciaData = new EmergenciaData();
            ArrayList<Brigada> listaBrigadas = new ArrayList();
            listaBrigadas = brigadaData.listarBrigadasSegunEstado(estado);
            Cuartel cuartel = new Cuartel();
            CuartelData cuartelData = new CuartelData();
            for (Brigada brigada : listaBrigadas) {
                cuartel = cuartelData.buscarCuartel(brigada.getNumeroCuartel());
                emergencia = emergenciaData.buscarEmergencia(brigada.getEspecialidad().getId());
                tablaModelo.addRow(new Object[]{brigada.getCodigoBrigada(), brigada.getNombreBrigada(), emergencia.getEmergencia(), cuartel.getNombreCuartel()});
            }
        }
    }

    /**
     * Creates new form EstadisticasUIInfoBrigada
     */
    public EstadisticasUIInfoBrigada() {
        initComponents();
        cargarCabecera();
        cargoDatos(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTablaDeBrigadas = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jBtnSalir = new javax.swing.JButton();
        jRBDisponible = new javax.swing.JRadioButton();

        setClosable(true);
        setTitle("Brigadas");

        jTablaDeBrigadas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTablaDeBrigadas);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("Brigadas");

        jBtnSalir.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jBtnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icons8-salir-50.png"))); // NOI18N
        jBtnSalir.setLabel("Salir");
        jBtnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnSalirActionPerformed(evt);
            }
        });

        jRBDisponible.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jRBDisponible.setSelected(true);
        jRBDisponible.setLabel("Disponibles");
        jRBDisponible.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBDisponibleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(701, 701, 701)
                        .addComponent(jBtnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(55, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(513, 513, 513)
                                .addComponent(jRBDisponible))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 877, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jRBDisponible))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addComponent(jBtnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_jBtnSalirActionPerformed

    private void jRBDisponibleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBDisponibleActionPerformed

        if (jRBDisponible.isSelected()) { //RADIO BUTON ACTIVO
            borrarFilas();
            cargoDatos(jRBDisponible.isSelected());
        } else { //RADIO BUTON DESACTIVO
            borrarFilas();
            cargoDatos(jRBDisponible.isSelected());
        }
    }//GEN-LAST:event_jRBDisponibleActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JRadioButton jRBDisponible;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTablaDeBrigadas;
    // End of variables declaration//GEN-END:variables
}
